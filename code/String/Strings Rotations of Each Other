https://www.geeksforgeeks.org/problems/check-if-strings-are-rotations-of-each-other-or-not-1587115620/1

Method 1 :
using contains function.
TC : O(n) i.e length of the string

class Solution
{
    //Function to check if two strings are rotations of each other or not.
    
    public static boolean areRotations(String s1, String s2 )
    {
        if(s1.length() != s2.length()) return false;
        String s = s1+s1;
        
        if(s.contains(s2))
        return true;
        
        return false;
    
    }
    
}

----------------------------------------------------------------------------

METHOD 2:

KMP ALogorithm ( Implementing LPS + Algorithm)

class Solution
{
    //Function to check if two strings are rotations of each other or not.
    
    static void LPS(String s, int[] lps)
    {
        int len=0, n=s.length(), i=1;
        lps[0] = 0;
        
        while(i<n)
        {
            if(s.charAt(i) == s.charAt(len))
            {len++; lps[i] = len; i++;}
            else
            {
                if(len == 0)
                {
                    lps[i] = 0;
                    i++;
                }
                else
                {
                    len = lps[len-1];
                }
            }
        }
    }
    
    public static boolean areRotations(String s1, String s2 )
    {
        // Your code here
        String s = s1+s1;
        int n=s.length(), m=s2.length(), res = -1;
        
        int[] lps = new int[m];
        LPS(s2,lps);
        
        int i=0, j=0;

        while(i<n)
        {
            if(s.charAt(i) == s2.charAt(j))
            {i++; j++;}
            
            if(j == m)
            {
                //System.out.println(i-j);
                j = lps[j-1];
                return true;
                
            }
            else if(i<n && s.charAt(i) != s2.charAt(j))
            {
                if(j == 0) i++;
                else
                j = lps[j-1];
            }
        }
        
        return false;
        
        
    }
    
}
