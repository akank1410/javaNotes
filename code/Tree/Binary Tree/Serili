TC  : SERILIZATION : 2^h+1 -1
// https://leetcode.com/problems/serialize-and-deserialize-binary-tree/description/

public class Codec {

    // Encodes a tree to a single string.
    public String serialize(TreeNode root) {

	if(root == null) return "";

	StringBuffer res = new StringBuffer();
	Queue<TreeNode> q = new LinkedList<>();
	q.offer(root);
	
	while(! q.isEmpty())
	{	
		TreeNode n = q.poll();
		if(n==null){ 
			res.append("# ");
			continue;}
		res.append(n.val + " ");
		q.offer(n.left);
		q.offer(n.right);
	}
        return res.toString();
    }

    // Decodes your encoded data to tree.
    public TreeNode deserialize(String data) {
        
	if(data == "") return null;

	String[] s = data.split(" ");
	TreeNode root = new TreeNode(Integer.parseInt(s[0]));
	Queue<TreeNode> q = new LinkedList<>();
	q.offer(root);

	for(int i=1; i<s.length; i++)
	{
		TreeNode n = q.poll();
		if(! s[i].equals("#"))
		{
			TreeNode left = new TreeNode(Integer.parseInt(s[i]));
			n.left = left;
			q.offer(left);
		}
		
		if(! s[++i].equals("#"))
		{
			TreeNode right = new TreeNode(Integer.parseInt(s[i]));
			n.right = right;
			q.offer(right);
		}
	}
	return root;
    }
}
